{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeInitializeImmutableOwnerInstructionUnchecked = exports.decodeInitializeImmutableOwnerInstruction = exports.createInitializeImmutableOwnerInstruction = exports.initializeImmutableOwnerInstructionData = void 0;\nconst buffer_layout_1 = require(\"@solana/buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst errors_js_1 = require(\"../errors.js\");\nconst types_js_1 = require(\"./types.js\");\n/** The struct that represents the instruction data as it is read by the program */\nexports.initializeImmutableOwnerInstructionData = (0, buffer_layout_1.struct)([(0, buffer_layout_1.u8)('instruction')]);\n/**\n * Construct an InitializeImmutableOwner instruction\n *\n * @param account           Immutable Owner Account\n * @param programId         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeImmutableOwnerInstruction(account, programId) {\n  const keys = [{\n    pubkey: account,\n    isSigner: false,\n    isWritable: true\n  }];\n  const data = Buffer.alloc(exports.initializeImmutableOwnerInstructionData.span);\n  exports.initializeImmutableOwnerInstructionData.encode({\n    instruction: types_js_1.TokenInstruction.InitializeImmutableOwner\n  }, data);\n  return new web3_js_1.TransactionInstruction({\n    keys,\n    programId,\n    data\n  });\n}\nexports.createInitializeImmutableOwnerInstruction = createInitializeImmutableOwnerInstruction;\n/**\n * Decode an InitializeImmutableOwner instruction and validate it\n *\n * @param instruction InitializeImmutableOwner instruction to decode\n * @param programId   SPL Token program account\n *\n * @return Decoded, valid instruction\n */\nfunction decodeInitializeImmutableOwnerInstruction(instruction, programId) {\n  if (!instruction.programId.equals(programId)) throw new errors_js_1.TokenInvalidInstructionProgramError();\n  if (instruction.data.length !== exports.initializeImmutableOwnerInstructionData.span) throw new errors_js_1.TokenInvalidInstructionDataError();\n  const {\n    keys: {\n      account\n    },\n    data\n  } = decodeInitializeImmutableOwnerInstructionUnchecked(instruction);\n  if (data.instruction !== types_js_1.TokenInstruction.InitializeImmutableOwner) throw new errors_js_1.TokenInvalidInstructionTypeError();\n  if (!account) throw new errors_js_1.TokenInvalidInstructionKeysError();\n  return {\n    programId,\n    keys: {\n      account\n    },\n    data\n  };\n}\nexports.decodeInitializeImmutableOwnerInstruction = decodeInitializeImmutableOwnerInstruction;\n/**\n * Decode an InitializeImmutableOwner instruction without validating it\n *\n * @param instruction Transaction instruction to decode\n *\n * @return Decoded, non-validated instruction\n */\nfunction decodeInitializeImmutableOwnerInstructionUnchecked({\n  programId,\n  keys: [account],\n  data\n}) {\n  const {\n    instruction\n  } = exports.initializeImmutableOwnerInstructionData.decode(data);\n  return {\n    programId,\n    keys: {\n      account: account\n    },\n    data: {\n      instruction\n    }\n  };\n}\nexports.decodeInitializeImmutableOwnerInstructionUnchecked = decodeInitializeImmutableOwnerInstructionUnchecked;\n//# sourceMappingURL=initializeImmutableOwner.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}