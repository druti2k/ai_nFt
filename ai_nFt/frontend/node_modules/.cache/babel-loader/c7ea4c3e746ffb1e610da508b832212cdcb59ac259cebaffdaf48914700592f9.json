{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TOKEN_METADATA_DISCRIMINATOR = void 0;\nexports.pack = pack;\nexports.unpack = unpack;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst codecs_1 = require(\"@solana/codecs\");\nexports.TOKEN_METADATA_DISCRIMINATOR = Buffer.from([112, 132, 90, 90, 11, 88, 157, 87]);\nfunction getStringCodec() {\n  return (0, codecs_1.addCodecSizePrefix)((0, codecs_1.getUtf8Codec)(), (0, codecs_1.getU32Codec)());\n}\nconst tokenMetadataCodec = (0, codecs_1.getStructCodec)([['updateAuthority', (0, codecs_1.fixCodecSize)((0, codecs_1.getBytesCodec)(), 32)], ['mint', (0, codecs_1.fixCodecSize)((0, codecs_1.getBytesCodec)(), 32)], ['name', getStringCodec()], ['symbol', getStringCodec()], ['uri', getStringCodec()], ['additionalMetadata', (0, codecs_1.getArrayCodec)((0, codecs_1.getTupleCodec)([getStringCodec(), getStringCodec()]))]]);\n// Checks if all elements in the array are 0\nfunction isNonePubkey(buffer) {\n  for (let i = 0; i < buffer.length; i++) {\n    if (buffer[i] !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n// Pack TokenMetadata into byte slab\nfunction pack(meta) {\n  var _a;\n  // If no updateAuthority given, set it to the None/Zero PublicKey for encoding\n  const updateAuthority = (_a = meta.updateAuthority) !== null && _a !== void 0 ? _a : web3_js_1.PublicKey.default;\n  return tokenMetadataCodec.encode(Object.assign(Object.assign({}, meta), {\n    updateAuthority: updateAuthority.toBuffer(),\n    mint: meta.mint.toBuffer()\n  }));\n}\n// unpack byte slab into TokenMetadata\nfunction unpack(buffer) {\n  const data = tokenMetadataCodec.decode(buffer);\n  return isNonePubkey(data.updateAuthority) ? {\n    mint: new web3_js_1.PublicKey(data.mint),\n    name: data.name,\n    symbol: data.symbol,\n    uri: data.uri,\n    additionalMetadata: data.additionalMetadata\n  } : {\n    updateAuthority: new web3_js_1.PublicKey(data.updateAuthority),\n    mint: new web3_js_1.PublicKey(data.mint),\n    name: data.name,\n    symbol: data.symbol,\n    uri: data.uri,\n    additionalMetadata: data.additionalMetadata\n  };\n}\n//# sourceMappingURL=state.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}