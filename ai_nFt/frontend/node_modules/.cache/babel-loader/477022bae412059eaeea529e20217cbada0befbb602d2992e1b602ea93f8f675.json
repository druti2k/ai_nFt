{"ast":null,"code":"\"use strict\";\n\n// Errors match those in rust https://github.com/solana-labs/solana-program-library/blob/master/token-metadata/interface/src/error.rs\n// Code follows: https://github.com/solana-labs/solana-program-library/blob/master/token/js/src/errors.tshttps://github.com/solana-labs/solana-program-library/blob/master/token/js/src/errors.ts\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KeyNotFoundError = exports.ImmutableMetadataError = exports.IncorrectUpdateAuthorityError = exports.IncorrectMintAuthorityError = exports.MintHasNoMintAuthorityError = exports.IncorrectAccountError = exports.TokenMetadataError = void 0;\n/** Base class for errors */\nclass TokenMetadataError extends Error {\n  constructor(message) {\n    super(message);\n  }\n}\nexports.TokenMetadataError = TokenMetadataError;\n/** Thrown if incorrect account provided */\nclass IncorrectAccountError extends TokenMetadataError {\n  constructor() {\n    super(...arguments);\n    this.name = 'IncorrectAccountError';\n  }\n}\nexports.IncorrectAccountError = IncorrectAccountError;\n/** Thrown if Mint has no mint authority */\nclass MintHasNoMintAuthorityError extends TokenMetadataError {\n  constructor() {\n    super(...arguments);\n    this.name = 'MintHasNoMintAuthorityError';\n  }\n}\nexports.MintHasNoMintAuthorityError = MintHasNoMintAuthorityError;\n/** Thrown if Incorrect mint authority has signed the instruction */\nclass IncorrectMintAuthorityError extends TokenMetadataError {\n  constructor() {\n    super(...arguments);\n    this.name = 'IncorrectMintAuthorityError';\n  }\n}\nexports.IncorrectMintAuthorityError = IncorrectMintAuthorityError;\n/** Thrown if Incorrect mint authority has signed the instruction */\nclass IncorrectUpdateAuthorityError extends TokenMetadataError {\n  constructor() {\n    super(...arguments);\n    this.name = 'IncorrectUpdateAuthorityError';\n  }\n}\nexports.IncorrectUpdateAuthorityError = IncorrectUpdateAuthorityError;\n/** Thrown if Token metadata has no update authority */\nclass ImmutableMetadataError extends TokenMetadataError {\n  constructor() {\n    super(...arguments);\n    this.name = 'ImmutableMetadataError';\n  }\n}\nexports.ImmutableMetadataError = ImmutableMetadataError;\n/** Thrown if Key not found in metadata account */\nclass KeyNotFoundError extends TokenMetadataError {\n  constructor() {\n    super(...arguments);\n    this.name = 'KeyNotFoundError';\n  }\n}\nexports.KeyNotFoundError = KeyNotFoundError;\n//# sourceMappingURL=errors.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}