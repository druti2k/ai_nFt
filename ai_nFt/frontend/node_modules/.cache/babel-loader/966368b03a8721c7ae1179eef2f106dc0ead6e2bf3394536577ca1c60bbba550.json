{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.QRHardwareCall = exports.QRHardwareCallName = void 0;\nconst RegistryType_1 = require(\"../RegistryType\");\nconst RegistryItem_1 = require(\"../RegistryItem\");\nconst lib_1 = require(\"../lib\");\nconst KeyDerivation_1 = require(\"./KeyDerivation\");\nvar Keys;\n(function (Keys) {\n  Keys[Keys[\"name\"] = 1] = \"name\";\n  Keys[Keys[\"params\"] = 2] = \"params\";\n})(Keys || (Keys = {}));\nvar QRHardwareCallName;\n(function (QRHardwareCallName) {\n  QRHardwareCallName[\"KeyDerivation\"] = \"key-derivation\";\n})(QRHardwareCallName = exports.QRHardwareCallName || (exports.QRHardwareCallName = {}));\nclass QRHardwareCall extends RegistryItem_1.RegistryItem {\n  constructor(name, params) {\n    super();\n    this.name = name;\n    this.params = params;\n    this.getRegistryType = () => RegistryType_1.RegistryTypes.QR_HARDWARE_CALL;\n    this.getName = () => this.name;\n    this.getParams = () => this.params;\n    this.toDataItem = () => {\n      const map = {};\n      map[Keys.name] = this.name;\n      const param = this.params.toDataItem();\n      param.setTag(this.params.getRegistryType().getTag());\n      map[Keys.params] = param;\n      return new lib_1.DataItem(map);\n    };\n  }\n}\nexports.QRHardwareCall = QRHardwareCall;\nQRHardwareCall.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const name = map[Keys.name] || QRHardwareCallName.KeyDerivation;\n  let params;\n  switch (name) {\n    case QRHardwareCallName.KeyDerivation:\n      params = KeyDerivation_1.KeyDerivation.fromDataItem(map[Keys.params]);\n  }\n  return new QRHardwareCall(name, params);\n};\nQRHardwareCall.fromCBOR = _cborPayload => {\n  const dataItem = lib_1.decodeToDataItem(_cborPayload);\n  return QRHardwareCall.fromDataItem(dataItem);\n};\n//# sourceMappingURL=QRHardwareCall.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}