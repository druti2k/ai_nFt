{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\druti\\\\OneDrive\\\\Desktop\\\\ai_nFt\\\\ai_nFt\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Connection, Keypair, PublicKey, clusterApiUrl, LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport { AiNftClient } from '../../sdk/src/ai-nft-client';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [status, setStatus] = useState('');\n  const [nftData, setNftData] = useState({\n    name: 'My NFT Collection',\n    symbol: 'MNFT',\n    uri: 'https://example.com/metadata.json',\n    imageUrl: 'https://example.com/image.jpg',\n    metadata: JSON.stringify({\n      name: 'My First NFT',\n      description: 'This is my first NFT using the AI NFT SDK',\n      image: 'https://example.com/image.jpg'\n    })\n  });\n  const handleInitialize = async () => {\n    try {\n      setStatus('Initializing...');\n      const connection = new Connection(clusterApiUrl('devnet'));\n      const payer = Keypair.generate();\n\n      // Request airdrop\n      const airdropSignature = await connection.requestAirdrop(payer.publicKey, 2 * LAMPORTS_PER_SOL);\n      await connection.confirmTransaction(airdropSignature);\n      const client = new AiNftClient(connection, payer);\n      const signature = await client.initialize(nftData.name, nftData.symbol, nftData.uri);\n      setStatus(`Collection initialized! Signature: ${signature}`);\n    } catch (error) {\n      setStatus(`Error: ${error.message}`);\n    }\n  };\n  const handleMint = async () => {\n    try {\n      setStatus('Minting...');\n      const connection = new Connection(clusterApiUrl('devnet'));\n      const payer = Keypair.generate();\n\n      // Request airdrop\n      const airdropSignature = await connection.requestAirdrop(payer.publicKey, 2 * LAMPORTS_PER_SOL);\n      await connection.confirmTransaction(airdropSignature);\n      const client = new AiNftClient(connection, payer);\n      const signature = await client.mint(new PublicKey('YOUR_MINT_PUBKEY'),\n      // Replace with actual mint pubkey\n      new PublicKey('YOUR_TOKEN_ADDRESS'),\n      // Replace with actual token address\n      '1', nftData.imageUrl, nftData.metadata);\n      setStatus(`NFT minted! Signature: ${signature}`);\n    } catch (error) {\n      setStatus(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI NFT Creator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Collection Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: nftData.name,\n          onChange: e => setNftData({\n            ...nftData,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Symbol:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: nftData.symbol,\n          onChange: e => setNftData({\n            ...nftData,\n            symbol: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: nftData.imageUrl,\n          onChange: e => setNftData({\n            ...nftData,\n            imageUrl: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: JSON.parse(nftData.metadata).description,\n          onChange: e => setNftData({\n            ...nftData,\n            metadata: JSON.stringify({\n              ...JSON.parse(nftData.metadata),\n              description: e.target.value\n            })\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleInitialize,\n          children: \"Initialize Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMint,\n          children: \"Mint NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ot6/n0JikZXTaaGGMwHYNA8WJoM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Connection","Keypair","PublicKey","clusterApiUrl","LAMPORTS_PER_SOL","AiNftClient","jsxDEV","_jsxDEV","App","_s","status","setStatus","nftData","setNftData","name","symbol","uri","imageUrl","metadata","JSON","stringify","description","image","handleInitialize","connection","payer","generate","airdropSignature","requestAirdrop","publicKey","confirmTransaction","client","signature","initialize","error","message","handleMint","mint","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","parse","onClick","_c","$RefreshReg$"],"sources":["C:/Users/druti/OneDrive/Desktop/ai_nFt/ai_nFt/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Connection, Keypair, PublicKey, clusterApiUrl, LAMPORTS_PER_SOL } from '@solana/web3.js';\nimport { AiNftClient } from '../../sdk/src/ai-nft-client';\nimport './App.css';\n\nfunction App() {\n  const [status, setStatus] = useState<string>('');\n  const [nftData, setNftData] = useState<{\n    name: string;\n    symbol: string;\n    uri: string;\n    imageUrl: string;\n    metadata: string;\n  }>({\n    name: 'My NFT Collection',\n    symbol: 'MNFT',\n    uri: 'https://example.com/metadata.json',\n    imageUrl: 'https://example.com/image.jpg',\n    metadata: JSON.stringify({\n      name: 'My First NFT',\n      description: 'This is my first NFT using the AI NFT SDK',\n      image: 'https://example.com/image.jpg'\n    })\n  });\n\n  const handleInitialize = async () => {\n    try {\n      setStatus('Initializing...');\n      const connection = new Connection(clusterApiUrl('devnet'));\n      const payer = Keypair.generate();\n      \n      // Request airdrop\n      const airdropSignature = await connection.requestAirdrop(\n        payer.publicKey,\n        2 * LAMPORTS_PER_SOL\n      );\n      await connection.confirmTransaction(airdropSignature);\n      \n      const client = new AiNftClient(connection, payer);\n      const signature = await client.initialize(\n        nftData.name,\n        nftData.symbol,\n        nftData.uri\n      );\n      \n      setStatus(`Collection initialized! Signature: ${signature}`);\n    } catch (error) {\n      setStatus(`Error: ${error.message}`);\n    }\n  };\n\n  const handleMint = async () => {\n    try {\n      setStatus('Minting...');\n      const connection = new Connection(clusterApiUrl('devnet'));\n      const payer = Keypair.generate();\n      \n      // Request airdrop\n      const airdropSignature = await connection.requestAirdrop(\n        payer.publicKey,\n        2 * LAMPORTS_PER_SOL\n      );\n      await connection.confirmTransaction(airdropSignature);\n      \n      const client = new AiNftClient(connection, payer);\n      const signature = await client.mint(\n        new PublicKey('YOUR_MINT_PUBKEY'), // Replace with actual mint pubkey\n        new PublicKey('YOUR_TOKEN_ADDRESS'), // Replace with actual token address\n        '1',\n        nftData.imageUrl,\n        nftData.metadata\n      );\n      \n      setStatus(`NFT minted! Signature: ${signature}`);\n    } catch (error) {\n      setStatus(`Error: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>AI NFT Creator</h1>\n        <div className=\"form-group\">\n          <label>Collection Name:</label>\n          <input\n            type=\"text\"\n            value={nftData.name}\n            onChange={(e) => setNftData({ ...nftData, name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Symbol:</label>\n          <input\n            type=\"text\"\n            value={nftData.symbol}\n            onChange={(e) => setNftData({ ...nftData, symbol: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Image URL:</label>\n          <input\n            type=\"text\"\n            value={nftData.imageUrl}\n            onChange={(e) => setNftData({ ...nftData, imageUrl: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Description:</label>\n          <textarea\n            value={JSON.parse(nftData.metadata).description}\n            onChange={(e) => setNftData({\n              ...nftData,\n              metadata: JSON.stringify({\n                ...JSON.parse(nftData.metadata),\n                description: e.target.value\n              })\n            })}\n          />\n        </div>\n        <div className=\"buttons\">\n          <button onClick={handleInitialize}>Initialize Collection</button>\n          <button onClick={handleMint}>Mint NFT</button>\n        </div>\n        {status && <div className=\"status\">{status}</div>}\n      </header>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}