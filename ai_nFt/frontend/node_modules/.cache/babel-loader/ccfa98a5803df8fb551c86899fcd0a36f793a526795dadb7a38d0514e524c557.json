{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrezorConnect = exports.CoreInSuiteDesktop = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst utils_1 = require(\"@trezor/utils\");\nconst connectSettings_1 = require(\"../connectSettings\");\nclass CoreInSuiteDesktop {\n  eventEmitter = new events_1.default();\n  _settings;\n  ws;\n  messages;\n  constructor() {\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    this.messages = (0, utils_1.createDeferredManager)();\n  }\n  manifest(data) {\n    this._settings = (0, connectSettings_1.parseConnectSettings)({\n      ...this._settings,\n      manifest: data\n    });\n  }\n  dispose() {\n    this.eventEmitter.removeAllListeners();\n    this._settings = (0, connectSettings_1.parseConnectSettings)();\n    this.ws?.close();\n    return Promise.resolve(undefined);\n  }\n  cancel(_error) {}\n  async handshake() {\n    const {\n      promise,\n      promiseId\n    } = this.messages.create(1000);\n    this.ws?.send(JSON.stringify({\n      id: promiseId,\n      type: events_2.POPUP.HANDSHAKE\n    }));\n    try {\n      await promise;\n    } catch (err) {\n      console.error(err);\n      throw new Error('Handshake timed out');\n    }\n  }\n  async init(settings = {}) {\n    const newSettings = (0, connectSettings_1.parseConnectSettings)({\n      ...this._settings,\n      ...settings\n    });\n    if (!newSettings.transports?.length) {\n      newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n    }\n    this._settings = newSettings;\n    this.ws?.close();\n    const wsOpen = (0, utils_1.createDeferred)(1000);\n    this.ws = new WebSocket('ws://localhost:21335/connect-ws');\n    this.ws.addEventListener('opened', () => {\n      wsOpen.resolve();\n    });\n    this.ws.addEventListener('error', () => {\n      wsOpen.reject(new Error('WebSocket error'));\n      this.messages.rejectAll(new Error('WebSocket error'));\n    });\n    this.ws.addEventListener('message', event => {\n      try {\n        const data = JSON.parse(event.data);\n        this.messages.resolve(data.id, data);\n      } catch {}\n    });\n    this.ws.addEventListener('close', () => {\n      wsOpen.reject(new Error('WebSocket closed'));\n      this.messages.rejectAll(new Error('WebSocket closed'));\n    });\n    if (this.ws.readyState !== WebSocket.OPEN) {\n      setTimeout(() => {\n        if (this.ws?.readyState === WebSocket.OPEN) {\n          wsOpen.resolve();\n        }\n      }, 500);\n      await wsOpen.promise;\n    }\n    return await this.handshake();\n  }\n  setTransports() {\n    throw new Error('Unsupported right now');\n  }\n  async call(params) {\n    try {\n      if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n        await this.init();\n      }\n      await this.handshake();\n      const {\n        promise,\n        promiseId\n      } = this.messages.create();\n      this.ws?.send(JSON.stringify({\n        id: promiseId,\n        type: events_2.IFRAME.CALL,\n        payload: params\n      }));\n      return promise;\n    } catch (err) {\n      return {\n        success: false,\n        payload: {\n          error: err.message\n        }\n      };\n    }\n  }\n  uiResponse(_response) {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  requestLogin() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  disableWebUSB() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  requestWebUSBDevice() {\n    throw ERRORS.TypedError('Method_InvalidPackage');\n  }\n  renderWebUSBButton() {}\n}\nexports.CoreInSuiteDesktop = CoreInSuiteDesktop;\nconst impl = new CoreInSuiteDesktop();\nexports.TrezorConnect = (0, factory_1.factory)({\n  eventEmitter: impl.eventEmitter,\n  init: impl.init.bind(impl),\n  call: impl.call.bind(impl),\n  setTransports: impl.setTransports.bind(impl),\n  manifest: impl.manifest.bind(impl),\n  requestLogin: impl.requestLogin.bind(impl),\n  uiResponse: impl.uiResponse.bind(impl),\n  cancel: impl.cancel.bind(impl),\n  dispose: impl.dispose.bind(impl)\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","TrezorConnect","CoreInSuiteDesktop","tslib_1","require","events_1","__importDefault","ERRORS","__importStar","events_2","factory_1","utils_1","connectSettings_1","eventEmitter","default","_settings","ws","messages","constructor","parseConnectSettings","createDeferredManager","manifest","data","dispose","removeAllListeners","close","Promise","resolve","undefined","cancel","_error","handshake","promise","promiseId","create","send","JSON","stringify","id","type","POPUP","HANDSHAKE","err","console","error","Error","init","settings","newSettings","transports","length","wsOpen","createDeferred","WebSocket","addEventListener","reject","rejectAll","event","parse","readyState","OPEN","setTimeout","setTransports","call","params","IFRAME","CALL","payload","success","message","uiResponse","_response","TypedError","requestLogin","disableWebUSB","requestWebUSBDevice","renderWebUSBButton","impl","factory","bind"],"sources":["/home/druti/Desktop/ai_nFt/frontend/node_modules/@trezor/connect-web/lib/impl/core-in-suite-desktop.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrezorConnect = exports.CoreInSuiteDesktop = void 0;\nconst tslib_1 = require(\"tslib\");\nconst events_1 = tslib_1.__importDefault(require(\"events\"));\nconst ERRORS = tslib_1.__importStar(require(\"@trezor/connect/lib/constants/errors\"));\nconst events_2 = require(\"@trezor/connect/lib/events\");\nconst factory_1 = require(\"@trezor/connect/lib/factory\");\nconst utils_1 = require(\"@trezor/utils\");\nconst connectSettings_1 = require(\"../connectSettings\");\nclass CoreInSuiteDesktop {\n    eventEmitter = new events_1.default();\n    _settings;\n    ws;\n    messages;\n    constructor() {\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this.messages = (0, utils_1.createDeferredManager)();\n    }\n    manifest(data) {\n        this._settings = (0, connectSettings_1.parseConnectSettings)({\n            ...this._settings,\n            manifest: data,\n        });\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        this._settings = (0, connectSettings_1.parseConnectSettings)();\n        this.ws?.close();\n        return Promise.resolve(undefined);\n    }\n    cancel(_error) { }\n    async handshake() {\n        const { promise, promiseId } = this.messages.create(1000);\n        this.ws?.send(JSON.stringify({\n            id: promiseId,\n            type: events_2.POPUP.HANDSHAKE,\n        }));\n        try {\n            await promise;\n        }\n        catch (err) {\n            console.error(err);\n            throw new Error('Handshake timed out');\n        }\n    }\n    async init(settings = {}) {\n        const newSettings = (0, connectSettings_1.parseConnectSettings)({\n            ...this._settings,\n            ...settings,\n        });\n        if (!newSettings.transports?.length) {\n            newSettings.transports = ['BridgeTransport', 'WebUsbTransport'];\n        }\n        this._settings = newSettings;\n        this.ws?.close();\n        const wsOpen = (0, utils_1.createDeferred)(1000);\n        this.ws = new WebSocket('ws://localhost:21335/connect-ws');\n        this.ws.addEventListener('opened', () => {\n            wsOpen.resolve();\n        });\n        this.ws.addEventListener('error', () => {\n            wsOpen.reject(new Error('WebSocket error'));\n            this.messages.rejectAll(new Error('WebSocket error'));\n        });\n        this.ws.addEventListener('message', (event) => {\n            try {\n                const data = JSON.parse(event.data);\n                this.messages.resolve(data.id, data);\n            }\n            catch {\n            }\n        });\n        this.ws.addEventListener('close', () => {\n            wsOpen.reject(new Error('WebSocket closed'));\n            this.messages.rejectAll(new Error('WebSocket closed'));\n        });\n        if (this.ws.readyState !== WebSocket.OPEN) {\n            setTimeout(() => {\n                if (this.ws?.readyState === WebSocket.OPEN) {\n                    wsOpen.resolve();\n                }\n            }, 500);\n            await wsOpen.promise;\n        }\n        return await this.handshake();\n    }\n    setTransports() {\n        throw new Error('Unsupported right now');\n    }\n    async call(params) {\n        try {\n            if (!this.ws || this.ws.readyState !== WebSocket.OPEN) {\n                await this.init();\n            }\n            await this.handshake();\n            const { promise, promiseId } = this.messages.create();\n            this.ws?.send(JSON.stringify({\n                id: promiseId,\n                type: events_2.IFRAME.CALL,\n                payload: params,\n            }));\n            return promise;\n        }\n        catch (err) {\n            return {\n                success: false,\n                payload: {\n                    error: err.message,\n                },\n            };\n        }\n    }\n    uiResponse(_response) {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestLogin() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    disableWebUSB() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    requestWebUSBDevice() {\n        throw ERRORS.TypedError('Method_InvalidPackage');\n    }\n    renderWebUSBButton() { }\n}\nexports.CoreInSuiteDesktop = CoreInSuiteDesktop;\nconst impl = new CoreInSuiteDesktop();\nexports.TrezorConnect = (0, factory_1.factory)({\n    eventEmitter: impl.eventEmitter,\n    init: impl.init.bind(impl),\n    call: impl.call.bind(impl),\n    setTransports: impl.setTransports.bind(impl),\n    manifest: impl.manifest.bind(impl),\n    requestLogin: impl.requestLogin.bind(impl),\n    uiResponse: impl.uiResponse.bind(impl),\n    cancel: impl.cancel.bind(impl),\n    dispose: impl.dispose.bind(impl),\n});\n//# sourceMappingURL=core-in-suite-desktop.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}