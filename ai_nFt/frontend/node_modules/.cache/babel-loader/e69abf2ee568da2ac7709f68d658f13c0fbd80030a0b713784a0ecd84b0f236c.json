{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TrezorConnectDynamic = void 0;\nconst constants_1 = require(\"../constants\");\nconst proxy_event_emitter_1 = require(\"../utils/proxy-event-emitter\");\nclass TrezorConnectDynamic {\n  eventEmitter;\n  currentTarget;\n  implementations;\n  getInitTarget;\n  handleErrorFallback;\n  lastSettings;\n  constructor({\n    implementations,\n    getInitTarget,\n    handleErrorFallback\n  }) {\n    this.implementations = implementations;\n    this.currentTarget = this.implementations[0].type;\n    this.getInitTarget = getInitTarget;\n    this.handleErrorFallback = handleErrorFallback;\n    this.eventEmitter = new proxy_event_emitter_1.ProxyEventEmitter(this.implementations.map(impl => impl.impl.eventEmitter));\n  }\n  getTarget() {\n    return this.implementations.find(impl => impl.type === this.currentTarget).impl;\n  }\n  async switchTarget(target) {\n    if (this.currentTarget === target) {\n      return;\n    }\n    if (!this.lastSettings) {\n      throw constants_1.ERRORS.TypedError('Init_NotInitialized');\n    }\n    await this.getTarget().dispose();\n    this.currentTarget = target;\n    await this.getTarget().init(this.lastSettings);\n  }\n  manifest(manifest) {\n    this.lastSettings = {\n      ...this.lastSettings,\n      manifest\n    };\n    this.getTarget().manifest(manifest);\n  }\n  async init(settings) {\n    if (!settings?.manifest) {\n      throw constants_1.ERRORS.TypedError('Init_ManifestMissing');\n    }\n    this.lastSettings = settings;\n    this.currentTarget = this.getInitTarget(settings);\n    try {\n      return await this.getTarget().init(this.lastSettings);\n    } catch (error) {\n      if (await this.handleErrorFallback(error.code)) {\n        return await this.getTarget().init(settings);\n      }\n      throw error;\n    }\n  }\n  setTransports({\n    transports\n  }) {\n    this.lastSettings = {\n      ...this.lastSettings,\n      transports\n    };\n    this.getTarget().setTransports({\n      transports\n    });\n  }\n  async call(params) {\n    const response = await this.getTarget().call(params);\n    if (!response.success) {\n      if (await this.handleErrorFallback(response.payload.code)) {\n        return await this.getTarget().call(params);\n      }\n    }\n    return response;\n  }\n  requestLogin(params) {\n    return this.getTarget().requestLogin(params);\n  }\n  uiResponse(params) {\n    return this.getTarget().uiResponse(params);\n  }\n  cancel(error) {\n    return this.getTarget().cancel(error);\n  }\n  dispose() {\n    this.eventEmitter.removeAllListeners();\n    return this.getTarget().dispose();\n  }\n}\nexports.TrezorConnectDynamic = TrezorConnectDynamic;","map":{"version":3,"names":["Object","defineProperty","exports","value","TrezorConnectDynamic","constants_1","require","proxy_event_emitter_1","eventEmitter","currentTarget","implementations","getInitTarget","handleErrorFallback","lastSettings","constructor","type","ProxyEventEmitter","map","impl","getTarget","find","switchTarget","target","ERRORS","TypedError","dispose","init","manifest","settings","error","code","setTransports","transports","call","params","response","success","payload","requestLogin","uiResponse","cancel","removeAllListeners"],"sources":["/home/druti/Desktop/ai_nFt/frontend/node_modules/@trezor/connect/lib/impl/dynamic.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrezorConnectDynamic = void 0;\nconst constants_1 = require(\"../constants\");\nconst proxy_event_emitter_1 = require(\"../utils/proxy-event-emitter\");\nclass TrezorConnectDynamic {\n    eventEmitter;\n    currentTarget;\n    implementations;\n    getInitTarget;\n    handleErrorFallback;\n    lastSettings;\n    constructor({ implementations, getInitTarget, handleErrorFallback, }) {\n        this.implementations = implementations;\n        this.currentTarget = this.implementations[0].type;\n        this.getInitTarget = getInitTarget;\n        this.handleErrorFallback = handleErrorFallback;\n        this.eventEmitter = new proxy_event_emitter_1.ProxyEventEmitter(this.implementations.map(impl => impl.impl.eventEmitter));\n    }\n    getTarget() {\n        return this.implementations.find(impl => impl.type === this.currentTarget).impl;\n    }\n    async switchTarget(target) {\n        if (this.currentTarget === target) {\n            return;\n        }\n        if (!this.lastSettings) {\n            throw constants_1.ERRORS.TypedError('Init_NotInitialized');\n        }\n        await this.getTarget().dispose();\n        this.currentTarget = target;\n        await this.getTarget().init(this.lastSettings);\n    }\n    manifest(manifest) {\n        this.lastSettings = { ...this.lastSettings, manifest };\n        this.getTarget().manifest(manifest);\n    }\n    async init(settings) {\n        if (!settings?.manifest) {\n            throw constants_1.ERRORS.TypedError('Init_ManifestMissing');\n        }\n        this.lastSettings = settings;\n        this.currentTarget = this.getInitTarget(settings);\n        try {\n            return await this.getTarget().init(this.lastSettings);\n        }\n        catch (error) {\n            if (await this.handleErrorFallback(error.code)) {\n                return await this.getTarget().init(settings);\n            }\n            throw error;\n        }\n    }\n    setTransports({ transports }) {\n        this.lastSettings = { ...this.lastSettings, transports };\n        this.getTarget().setTransports({ transports });\n    }\n    async call(params) {\n        const response = await this.getTarget().call(params);\n        if (!response.success) {\n            if (await this.handleErrorFallback(response.payload.code)) {\n                return await this.getTarget().call(params);\n            }\n        }\n        return response;\n    }\n    requestLogin(params) {\n        return this.getTarget().requestLogin(params);\n    }\n    uiResponse(params) {\n        return this.getTarget().uiResponse(params);\n    }\n    cancel(error) {\n        return this.getTarget().cancel(error);\n    }\n    dispose() {\n        this.eventEmitter.removeAllListeners();\n        return this.getTarget().dispose();\n    }\n}\nexports.TrezorConnectDynamic = TrezorConnectDynamic;\n//# sourceMappingURL=dynamic.js.map"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}