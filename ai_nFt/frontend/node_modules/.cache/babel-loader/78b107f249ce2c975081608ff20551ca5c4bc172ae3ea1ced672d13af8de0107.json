{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTransferFeeAmount = exports.getTransferFeeConfig = exports.TRANSFER_FEE_AMOUNT_SIZE = exports.TransferFeeAmountLayout = exports.calculateEpochFee = exports.getEpochFee = exports.TRANSFER_FEE_CONFIG_SIZE = exports.TransferFeeConfigLayout = exports.calculateFee = exports.transferFeeLayout = exports.ONE_IN_BASIS_POINTS = exports.MAX_FEE_BASIS_POINTS = void 0;\nconst buffer_layout_1 = require(\"@solana/buffer-layout\");\nconst buffer_layout_utils_1 = require(\"@solana/buffer-layout-utils\");\nconst extensionType_js_1 = require(\"../extensionType.js\");\nexports.MAX_FEE_BASIS_POINTS = 10000;\nexports.ONE_IN_BASIS_POINTS = BigInt(exports.MAX_FEE_BASIS_POINTS);\n/** Buffer layout for de/serializing a transfer fee */\nfunction transferFeeLayout(property) {\n  return (0, buffer_layout_1.struct)([(0, buffer_layout_utils_1.u64)('epoch'), (0, buffer_layout_utils_1.u64)('maximumFee'), (0, buffer_layout_1.u16)('transferFeeBasisPoints')], property);\n}\nexports.transferFeeLayout = transferFeeLayout;\n/** Calculate the transfer fee */\nfunction calculateFee(transferFee, preFeeAmount) {\n  const transferFeeBasisPoints = transferFee.transferFeeBasisPoints;\n  if (transferFeeBasisPoints === 0 || preFeeAmount === BigInt(0)) {\n    return BigInt(0);\n  } else {\n    const numerator = preFeeAmount * BigInt(transferFeeBasisPoints);\n    const rawFee = (numerator + exports.ONE_IN_BASIS_POINTS - BigInt(1)) / exports.ONE_IN_BASIS_POINTS;\n    const fee = rawFee > transferFee.maximumFee ? transferFee.maximumFee : rawFee;\n    return BigInt(fee);\n  }\n}\nexports.calculateFee = calculateFee;\n/** Buffer layout for de/serializing a transfer fee config extension */\nexports.TransferFeeConfigLayout = (0, buffer_layout_1.struct)([(0, buffer_layout_utils_1.publicKey)('transferFeeConfigAuthority'), (0, buffer_layout_utils_1.publicKey)('withdrawWithheldAuthority'), (0, buffer_layout_utils_1.u64)('withheldAmount'), transferFeeLayout('olderTransferFee'), transferFeeLayout('newerTransferFee')]);\nexports.TRANSFER_FEE_CONFIG_SIZE = exports.TransferFeeConfigLayout.span;\n/** Get the fee for given epoch */\nfunction getEpochFee(transferFeeConfig, epoch) {\n  if (epoch >= transferFeeConfig.newerTransferFee.epoch) {\n    return transferFeeConfig.newerTransferFee;\n  } else {\n    return transferFeeConfig.olderTransferFee;\n  }\n}\nexports.getEpochFee = getEpochFee;\n/** Calculate the fee for the given epoch and input amount */\nfunction calculateEpochFee(transferFeeConfig, epoch, preFeeAmount) {\n  const transferFee = getEpochFee(transferFeeConfig, epoch);\n  return calculateFee(transferFee, preFeeAmount);\n}\nexports.calculateEpochFee = calculateEpochFee;\n/** Buffer layout for de/serializing */\nexports.TransferFeeAmountLayout = (0, buffer_layout_1.struct)([(0, buffer_layout_utils_1.u64)('withheldAmount')]);\nexports.TRANSFER_FEE_AMOUNT_SIZE = exports.TransferFeeAmountLayout.span;\nfunction getTransferFeeConfig(mint) {\n  const extensionData = (0, extensionType_js_1.getExtensionData)(extensionType_js_1.ExtensionType.TransferFeeConfig, mint.tlvData);\n  if (extensionData !== null) {\n    return exports.TransferFeeConfigLayout.decode(extensionData);\n  } else {\n    return null;\n  }\n}\nexports.getTransferFeeConfig = getTransferFeeConfig;\nfunction getTransferFeeAmount(account) {\n  const extensionData = (0, extensionType_js_1.getExtensionData)(extensionType_js_1.ExtensionType.TransferFeeAmount, account.tlvData);\n  if (extensionData !== null) {\n    return exports.TransferFeeAmountLayout.decode(extensionData);\n  } else {\n    return null;\n  }\n}\nexports.getTransferFeeAmount = getTransferFeeAmount;\n//# sourceMappingURL=state.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}