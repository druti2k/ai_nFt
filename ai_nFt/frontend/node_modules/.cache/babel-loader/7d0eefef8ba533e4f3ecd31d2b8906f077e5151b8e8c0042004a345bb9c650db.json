{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KeyDerivation = exports.DerivationAlgorithm = exports.Curve = void 0;\nconst RegistryType_1 = require(\"../RegistryType\");\nconst RegistryItem_1 = require(\"../RegistryItem\");\nconst lib_1 = require(\"../lib\");\nconst CryptoKeypath_1 = require(\"../CryptoKeypath\");\nvar Keys;\n(function (Keys) {\n  Keys[Keys[\"keyPaths\"] = 1] = \"keyPaths\";\n  Keys[Keys[\"curve\"] = 2] = \"curve\";\n  Keys[Keys[\"algo\"] = 3] = \"algo\";\n  Keys[Keys[\"origin\"] = 4] = \"origin\";\n})(Keys || (Keys = {}));\nvar Curve;\n(function (Curve) {\n  Curve[\"secp256k1\"] = \"secp256k1\";\n  Curve[\"ed25519\"] = \"ed25519\";\n})(Curve = exports.Curve || (exports.Curve = {}));\nvar DerivationAlgorithm;\n(function (DerivationAlgorithm) {\n  DerivationAlgorithm[\"slip10\"] = \"slip10\";\n  DerivationAlgorithm[\"bip32ed25519\"] = \"bip32ed25519\";\n})(DerivationAlgorithm = exports.DerivationAlgorithm || (exports.DerivationAlgorithm = {}));\nclass KeyDerivation extends RegistryItem_1.RegistryItem {\n  constructor(keypaths, curve = Curve.secp256k1, algo = DerivationAlgorithm.slip10, origin) {\n    super();\n    this.keypaths = keypaths;\n    this.curve = curve;\n    this.algo = algo;\n    this.origin = origin;\n    this.getRegistryType = () => RegistryType_1.RegistryTypes.KEY_DERIVATION_CALL;\n    this.getKeypaths = () => this.keypaths;\n    this.getCurve = () => this.curve;\n    this.getAlgo = () => this.algo;\n    this.getOrigin = () => this.origin;\n    this.toDataItem = () => {\n      const map = {};\n      map[Keys.keyPaths] = this.keypaths.map(keyPath => {\n        const dataItem = keyPath.toDataItem();\n        dataItem.setTag(keyPath.getRegistryType().getTag());\n        return dataItem;\n      });\n      map[Keys.curve] = this.curve;\n      map[Keys.algo] = this.algo;\n      if (this.origin) {\n        map[Keys.origin] = this.origin;\n      }\n      return new lib_1.DataItem(map);\n    };\n  }\n}\nexports.KeyDerivation = KeyDerivation;\nKeyDerivation.fromDataItem = dataItem => {\n  const map = dataItem.getData();\n  const keypaths = map[Keys.keyPaths].map(keypath => CryptoKeypath_1.CryptoKeypath.fromDataItem(keypath));\n  const curve = map[Keys.curve];\n  const algo = map[Keys.algo];\n  const origin = map[Keys.origin];\n  return new KeyDerivation(keypaths, curve, algo, origin);\n};\nKeyDerivation.fromCBOR = _cborPayload => {\n  const dataItem = lib_1.decodeToDataItem(_cborPayload);\n  return KeyDerivation.fromDataItem(dataItem);\n};\n//# sourceMappingURL=KeyDerivation.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}