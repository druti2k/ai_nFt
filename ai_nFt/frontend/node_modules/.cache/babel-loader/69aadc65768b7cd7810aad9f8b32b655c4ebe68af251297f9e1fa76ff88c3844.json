{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createUpdateMetadataPointerInstruction = exports.updateMetadataPointerData = exports.createInitializeMetadataPointerInstruction = exports.initializeMetadataPointerData = exports.MetadataPointerInstruction = void 0;\nconst buffer_layout_1 = require(\"@solana/buffer-layout\");\nconst buffer_layout_utils_1 = require(\"@solana/buffer-layout-utils\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst constants_js_1 = require(\"../../constants.js\");\nconst errors_js_1 = require(\"../../errors.js\");\nconst types_js_1 = require(\"../../instructions/types.js\");\nconst internal_js_1 = require(\"../../instructions/internal.js\");\nvar MetadataPointerInstruction;\n(function (MetadataPointerInstruction) {\n  MetadataPointerInstruction[MetadataPointerInstruction[\"Initialize\"] = 0] = \"Initialize\";\n  MetadataPointerInstruction[MetadataPointerInstruction[\"Update\"] = 1] = \"Update\";\n})(MetadataPointerInstruction || (exports.MetadataPointerInstruction = MetadataPointerInstruction = {}));\nexports.initializeMetadataPointerData = (0, buffer_layout_1.struct)([\n// prettier-ignore\n(0, buffer_layout_1.u8)('instruction'), (0, buffer_layout_1.u8)('metadataPointerInstruction'), (0, buffer_layout_utils_1.publicKey)('authority'), (0, buffer_layout_utils_1.publicKey)('metadataAddress')]);\n/**\n * Construct an Initialize MetadataPointer instruction\n *\n * @param mint            Token mint account\n * @param authority       Optional Authority that can set the metadata address\n * @param metadataAddress Optional Account address that holds the metadata\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeMetadataPointerInstruction(mint, authority, metadataAddress, programId) {\n  if (!(0, constants_js_1.programSupportsExtensions)(programId)) {\n    throw new errors_js_1.TokenUnsupportedInstructionError();\n  }\n  const keys = [{\n    pubkey: mint,\n    isSigner: false,\n    isWritable: true\n  }];\n  const data = Buffer.alloc(exports.initializeMetadataPointerData.span);\n  exports.initializeMetadataPointerData.encode({\n    instruction: types_js_1.TokenInstruction.MetadataPointerExtension,\n    metadataPointerInstruction: MetadataPointerInstruction.Initialize,\n    authority: authority !== null && authority !== void 0 ? authority : web3_js_1.PublicKey.default,\n    metadataAddress: metadataAddress !== null && metadataAddress !== void 0 ? metadataAddress : web3_js_1.PublicKey.default\n  }, data);\n  return new web3_js_1.TransactionInstruction({\n    keys,\n    programId,\n    data: data\n  });\n}\nexports.createInitializeMetadataPointerInstruction = createInitializeMetadataPointerInstruction;\nexports.updateMetadataPointerData = (0, buffer_layout_1.struct)([\n// prettier-ignore\n(0, buffer_layout_1.u8)('instruction'), (0, buffer_layout_1.u8)('metadataPointerInstruction'), (0, buffer_layout_utils_1.publicKey)('metadataAddress')]);\nfunction createUpdateMetadataPointerInstruction(mint, authority, metadataAddress, multiSigners = [], programId = constants_js_1.TOKEN_2022_PROGRAM_ID) {\n  if (!(0, constants_js_1.programSupportsExtensions)(programId)) {\n    throw new errors_js_1.TokenUnsupportedInstructionError();\n  }\n  const keys = (0, internal_js_1.addSigners)([{\n    pubkey: mint,\n    isSigner: false,\n    isWritable: true\n  }], authority, multiSigners);\n  const data = Buffer.alloc(exports.updateMetadataPointerData.span);\n  exports.updateMetadataPointerData.encode({\n    instruction: types_js_1.TokenInstruction.MetadataPointerExtension,\n    metadataPointerInstruction: MetadataPointerInstruction.Update,\n    metadataAddress: metadataAddress !== null && metadataAddress !== void 0 ? metadataAddress : web3_js_1.PublicKey.default\n  }, data);\n  return new web3_js_1.TransactionInstruction({\n    keys,\n    programId,\n    data: data\n  });\n}\nexports.createUpdateMetadataPointerInstruction = createUpdateMetadataPointerInstruction;\n//# sourceMappingURL=instructions.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}