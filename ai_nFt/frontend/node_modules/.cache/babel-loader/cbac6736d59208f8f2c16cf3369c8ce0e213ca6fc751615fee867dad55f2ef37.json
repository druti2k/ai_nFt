{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCreateNativeMintInstruction = exports.createNativeMintInstructionData = void 0;\nconst buffer_layout_1 = require(\"@solana/buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst constants_js_1 = require(\"../constants.js\");\nconst errors_js_1 = require(\"../errors.js\");\nconst types_js_1 = require(\"./types.js\");\n/** TODO: docs */\nexports.createNativeMintInstructionData = (0, buffer_layout_1.struct)([(0, buffer_layout_1.u8)('instruction')]);\n/**\n * Construct a CreateNativeMint instruction\n *\n * @param account   New token account\n * @param mint      Mint account\n * @param owner     Owner of the new account\n * @param programId SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createCreateNativeMintInstruction(payer, nativeMintId = constants_js_1.NATIVE_MINT_2022, programId = constants_js_1.TOKEN_2022_PROGRAM_ID) {\n  if (!(0, constants_js_1.programSupportsExtensions)(programId)) {\n    throw new errors_js_1.TokenUnsupportedInstructionError();\n  }\n  const keys = [{\n    pubkey: payer,\n    isSigner: true,\n    isWritable: true\n  }, {\n    pubkey: nativeMintId,\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: web3_js_1.SystemProgram.programId,\n    isSigner: false,\n    isWritable: false\n  }];\n  const data = Buffer.alloc(exports.createNativeMintInstructionData.span);\n  exports.createNativeMintInstructionData.encode({\n    instruction: types_js_1.TokenInstruction.CreateNativeMint\n  }, data);\n  return new web3_js_1.TransactionInstruction({\n    keys,\n    programId,\n    data\n  });\n}\nexports.createCreateNativeMintInstruction = createCreateNativeMintInstruction;\n//# sourceMappingURL=createNativeMint.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}