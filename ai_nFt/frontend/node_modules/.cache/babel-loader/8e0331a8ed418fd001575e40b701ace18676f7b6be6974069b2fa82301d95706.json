{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createInitializeNonTransferableMintInstruction = exports.initializeNonTransferableMintInstructionData = void 0;\nconst buffer_layout_1 = require(\"@solana/buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst constants_js_1 = require(\"../constants.js\");\nconst errors_js_1 = require(\"../errors.js\");\nconst types_js_1 = require(\"./types.js\");\n/** The struct that represents the instruction data as it is read by the program */\nexports.initializeNonTransferableMintInstructionData = (0, buffer_layout_1.struct)([(0, buffer_layout_1.u8)('instruction')]);\n/**\n * Construct an InitializeNonTransferableMint instruction\n *\n * @param mint           Mint Account to make non-transferable\n * @param programId         SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createInitializeNonTransferableMintInstruction(mint, programId) {\n  if (!(0, constants_js_1.programSupportsExtensions)(programId)) {\n    throw new errors_js_1.TokenUnsupportedInstructionError();\n  }\n  const keys = [{\n    pubkey: mint,\n    isSigner: false,\n    isWritable: true\n  }];\n  const data = Buffer.alloc(exports.initializeNonTransferableMintInstructionData.span);\n  exports.initializeNonTransferableMintInstructionData.encode({\n    instruction: types_js_1.TokenInstruction.InitializeNonTransferableMint\n  }, data);\n  return new web3_js_1.TransactionInstruction({\n    keys,\n    programId,\n    data\n  });\n}\nexports.createInitializeNonTransferableMintInstruction = createInitializeNonTransferableMintInstruction;\n//# sourceMappingURL=initializeNonTransferableMint.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}