{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDisableCpiGuardInstruction = exports.createEnableCpiGuardInstruction = exports.cpiGuardInstructionData = exports.CpiGuardInstruction = void 0;\nconst buffer_layout_1 = require(\"@solana/buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst constants_js_1 = require(\"../../constants.js\");\nconst errors_js_1 = require(\"../../errors.js\");\nconst internal_js_1 = require(\"../../instructions/internal.js\");\nconst types_js_1 = require(\"../../instructions/types.js\");\nvar CpiGuardInstruction;\n(function (CpiGuardInstruction) {\n  CpiGuardInstruction[CpiGuardInstruction[\"Enable\"] = 0] = \"Enable\";\n  CpiGuardInstruction[CpiGuardInstruction[\"Disable\"] = 1] = \"Disable\";\n})(CpiGuardInstruction || (exports.CpiGuardInstruction = CpiGuardInstruction = {}));\n/** TODO: docs */\nexports.cpiGuardInstructionData = (0, buffer_layout_1.struct)([(0, buffer_layout_1.u8)('instruction'), (0, buffer_layout_1.u8)('cpiGuardInstruction')]);\n/**\n * Construct an EnableCpiGuard instruction\n *\n * @param account         Token account to update\n * @param authority       The account's owner/delegate\n * @param signers         The signer account(s)\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createEnableCpiGuardInstruction(account, authority, multiSigners = [], programId = constants_js_1.TOKEN_2022_PROGRAM_ID) {\n  return createCpiGuardInstruction(CpiGuardInstruction.Enable, account, authority, multiSigners, programId);\n}\nexports.createEnableCpiGuardInstruction = createEnableCpiGuardInstruction;\n/**\n * Construct a DisableCpiGuard instruction\n *\n * @param account         Token account to update\n * @param authority       The account's owner/delegate\n * @param signers         The signer account(s)\n * @param programId       SPL Token program account\n *\n * @return Instruction to add to a transaction\n */\nfunction createDisableCpiGuardInstruction(account, authority, multiSigners = [], programId = constants_js_1.TOKEN_2022_PROGRAM_ID) {\n  return createCpiGuardInstruction(CpiGuardInstruction.Disable, account, authority, multiSigners, programId);\n}\nexports.createDisableCpiGuardInstruction = createDisableCpiGuardInstruction;\nfunction createCpiGuardInstruction(cpiGuardInstruction, account, authority, multiSigners, programId) {\n  if (!(0, constants_js_1.programSupportsExtensions)(programId)) {\n    throw new errors_js_1.TokenUnsupportedInstructionError();\n  }\n  const keys = (0, internal_js_1.addSigners)([{\n    pubkey: account,\n    isSigner: false,\n    isWritable: true\n  }], authority, multiSigners);\n  const data = Buffer.alloc(exports.cpiGuardInstructionData.span);\n  exports.cpiGuardInstructionData.encode({\n    instruction: types_js_1.TokenInstruction.CpiGuardExtension,\n    cpiGuardInstruction\n  }, data);\n  return new web3_js_1.TransactionInstruction({\n    keys,\n    programId,\n    data\n  });\n}\n//# sourceMappingURL=instructions.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}