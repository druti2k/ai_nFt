{"ast":null,"code":"import { struct } from '@solana/buffer-layout';\nimport { publicKey } from '@solana/buffer-layout-utils';\nimport { PublicKey } from '@solana/web3.js';\nimport { ExtensionType, getExtensionData } from '../extensionType.js';\n/** Buffer layout for de/serializing a Metadata Pointer extension */\nexport const MetadataPointerLayout = struct([publicKey('authority'), publicKey('metadataAddress')]);\nexport const METADATA_POINTER_SIZE = MetadataPointerLayout.span;\nexport function getMetadataPointerState(mint) {\n  const extensionData = getExtensionData(ExtensionType.MetadataPointer, mint.tlvData);\n  if (extensionData !== null) {\n    const {\n      authority,\n      metadataAddress\n    } = MetadataPointerLayout.decode(extensionData);\n    // Explicity set None/Zero keys to null\n    return {\n      authority: authority.equals(PublicKey.default) ? null : authority,\n      metadataAddress: metadataAddress.equals(PublicKey.default) ? null : metadataAddress\n    };\n  } else {\n    return null;\n  }\n}\n//# sourceMappingURL=state.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}