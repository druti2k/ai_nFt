{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\druti\\\\OneDrive\\\\Desktop\\\\ai_nFt\\\\ai_nFt\\\\frontend\\\\src\\\\components\\\\NFTGenerator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFTGenerator = ({\n  onGenerate\n}) => {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [error, setError] = useState(null);\n  const {\n    publicKey\n  } = useWallet();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!publicKey) {\n      setError('Please connect your wallet first');\n      return;\n    }\n    if (!prompt) {\n      setError('Please enter a prompt');\n      return;\n    }\n    setIsGenerating(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:3001/generate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt,\n          walletAddress: publicKey.toString()\n        })\n      });\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error(data.error || 'Failed to generate NFT');\n      }\n      setGeneratedImage(data.imageUri);\n      if (onGenerate) {\n        onGenerate(data.imageUri);\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to generate NFT');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-button\",\n      children: /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"generator-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prompt,\n          onChange: e => setPrompt(e.target.value),\n          placeholder: \"Enter your image prompt...\",\n          disabled: isGenerating,\n          className: \"prompt-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isGenerating || !publicKey,\n          className: \"generate-button\",\n          children: isGenerating ? 'Generating...' : 'Generate NFT'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }, this), generatedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: generatedImage,\n          alt: \"Generated NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(NFTGenerator, \"Or8106HVlntDuORwc5M7qZ6NlCY=\", false, function () {\n  return [useWallet];\n});\n_c = NFTGenerator;\nexport default NFTGenerator;\nvar _c;\n$RefreshReg$(_c, \"NFTGenerator\");","map":{"version":3,"names":["React","useState","useWallet","WalletMultiButton","jsxDEV","_jsxDEV","NFTGenerator","onGenerate","_s","prompt","setPrompt","isGenerating","setIsGenerating","generatedImage","setGeneratedImage","error","setError","publicKey","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","walletAddress","toString","data","json","success","Error","imageUri","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","disabled","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/druti/OneDrive/Desktop/ai_nFt/ai_nFt/frontend/src/components/NFTGenerator.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useWallet } from '@solana/wallet-adapter-react';\r\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\r\n\r\ninterface NFTGeneratorProps {\r\n  onGenerate?: (imageUrl: string) => void;\r\n}\r\n\r\nconst NFTGenerator: React.FC<NFTGeneratorProps> = ({ onGenerate }) => {\r\n  const [prompt, setPrompt] = useState('');\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [generatedImage, setGeneratedImage] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const { publicKey } = useWallet();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!publicKey) {\r\n      setError('Please connect your wallet first');\r\n      return;\r\n    }\r\n    if (!prompt) {\r\n      setError('Please enter a prompt');\r\n      return;\r\n    }\r\n\r\n    setIsGenerating(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/generate', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          prompt,\r\n          walletAddress: publicKey.toString(),\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (!data.success) {\r\n        throw new Error(data.error || 'Failed to generate NFT');\r\n      }\r\n\r\n      setGeneratedImage(data.imageUri);\r\n      if (onGenerate) {\r\n        onGenerate(data.imageUri);\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to generate NFT');\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"nft-generator\">\r\n      <div className=\"wallet-button\">\r\n        <WalletMultiButton />\r\n      </div>\r\n      \r\n      <form onSubmit={handleSubmit} className=\"generator-form\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            value={prompt}\r\n            onChange={(e) => setPrompt(e.target.value)}\r\n            placeholder=\"Enter your image prompt...\"\r\n            disabled={isGenerating}\r\n            className=\"prompt-input\"\r\n          />\r\n          <button type=\"submit\" disabled={isGenerating || !publicKey} className=\"generate-button\">\r\n            {isGenerating ? 'Generating...' : 'Generate NFT'}\r\n          </button>\r\n        </div>\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        {generatedImage && (\r\n          <div className=\"generated-image\">\r\n            <img src={generatedImage} alt=\"Generated NFT\" />\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NFTGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}